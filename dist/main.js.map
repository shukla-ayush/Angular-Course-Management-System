{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/hello-world/hello-world.component.css","webpack:///./src/app/hello-world/hello-world.component.html","webpack:///./src/app/hello-world/hello-world.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/coruse.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-pills/topic-pills.component.css","webpack:///./src/app/topic-pills/topic-pills.component.html","webpack:///./src/app/topic-pills/topic-pills.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {CourseNavigatorServiceClient} from \"./services/course-navigator.service.client\";\r\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\r\nimport { WhiteBoardComponent } from './white-board/white-board.component';\r\nimport { CourseGridComponent } from './course-grid/course-grid.component';\r\nimport {CourseServiceClient} from \"./services/course.service.client\";\r\nimport {routing} from \"./app.routing\";\r\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\r\nimport { ModuleListComponent } from './module-list/module-list.component';\r\nimport {ModuleServiceClient} from \"./services/module.service.client\";\r\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\r\nimport {LessonServiceClient} from \"./services/lesson.service.client\";\r\nimport { WidgetListComponent } from './widget-list/widget-list.component';\r\nimport {WidgetServiceClient} from \"./services/widget.service.client\";\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport {UserServiceClient} from \"./services/user.service.client\";\r\nimport { SectionListComponent } from './section-list/section-list.component';\r\nimport {SectionServiceClient} from \"./services/section.service.client\";\r\nimport {TopicPillsComponent} from \"./topic-pills/topic-pills.component\";\r\nimport {TopicServiceClient} from \"./services/topic.service.client\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HelloWorldComponent,\r\n    CourseNavigatorComponent,\r\n    WhiteBoardComponent,\r\n    CourseGridComponent,\r\n    CourseViewerComponent,\r\n    ModuleListComponent,\r\n    LessonTabsComponent,\r\n    WidgetListComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    SectionListComponent,\r\n    TopicPillsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    routing\r\n  ],\r\n  providers: [\r\n    CourseNavigatorServiceClient,\r\n    CourseServiceClient,\r\n    ModuleServiceClient,\r\n    LessonServiceClient,\r\n    WidgetServiceClient,\r\n    UserServiceClient,\r\n    SectionServiceClient,\r\n    TopicServiceClient\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { WhiteBoardComponent } from \"./white-board/white-board.component\";\r\nimport {CourseViewerComponent} from \"./course-viewer/course-viewer.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {RegisterComponent} from \"./register/register.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {SectionListComponent} from \"./section-list/section-list.component\";\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: WhiteBoardComponent},\r\n  // { path: 'home/:userId', component: WhiteBoardComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/section', component: SectionListComponent },\r\n  // { path: 'course/:courseId/section/:userId', component: SectionListComponent },\r\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\r\n  { path: '**', component: WhiteBoardComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".card {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\"","module.exports = \"<br>\\r\\n<h2>Course Grid ({{courses.length}})</h2>\\r\\n<br>\\r\\n<!--<div style = \\\"padding-left: 10%; padding-right: 10%\\\">-->\\r\\n<br>\\r\\n<div class=\\\"row\\\">\\r\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\r\\n        <p class=\\\"card-text\\\">Visit the modules and lesson of {{course.title}}</p>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n              <div>\\r\\n                <a routerLink=\\\"/course/{{course.id}}\\\"\\r\\n                 class=\\\"btn btn-primary\\\">View Course</a>\\r\\n              </div>\\r\\n            </div>\\r\\n             <div class=\\\"col-sm-3\\\">\\r\\n             </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <div *ngIf=\\\"role !== 'admin' && role != null && checkCourse(course.id)\\\">\\r\\n                <a routerLink=\\\"/course/{{course.id}}/section\\\"\\r\\n                   class=\\\"btn btn-primary\\\">Enroll</a>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"role !== 'admin' && role != null && !checkCourse(course.id)\\\">\\r\\n                <a class=\\\"btn btn-light\\\">Enrolled</a>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"role === 'admin'\\\">\\r\\n                <a routerLink=\\\"/course/{{course.id}}/section\\\"\\r\\n                   class=\\\"btn btn-primary\\\">+/- Section</a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--<h2>Course Grid ({{courses.length}})</h2>-->\\r\\n<!--<br>-->\\r\\n<!--<div style = \\\"padding-left: 10%; padding-right: 10%\\\">-->\\r\\n  <!--<div class=\\\"row\\\">-->\\r\\n    <!--<div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">-->\\r\\n      <!--<div class=\\\"card\\\">-->\\r\\n        <!--<div class=\\\"card-body\\\">-->\\r\\n          <!--<h5 class=\\\"card-title\\\">{{course.title}}</h5>-->\\r\\n          <!--<p class=\\\"card-text\\\">Visit the modules and lesson of {{course.title}}</p>-->\\r\\n          <!--<a routerLink=\\\"/course/{{course.id}}\\\"-->\\r\\n             <!--class=\\\"btn btn-primary\\\">View Course</a>-->\\r\\n          <!--<div >-->\\r\\n            <!--<a *ngIf=\\\"role !== 'admin' && checkCourse(course.id)\\\" routerLink=\\\"/course/{{course.id}}/section\\\"-->\\r\\n               <!--class=\\\"btn btn-primary\\\">Enroll</a>-->\\r\\n          <!--</div>-->\\r\\n          <!--<a *ngIf=\\\"role === 'admin'\\\" routerLink=\\\"/course/{{course.id}}/section\\\"-->\\r\\n             <!--class=\\\"btn btn-primary\\\">+/- Section</a>-->\\r\\n        <!--</div>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n  <!--<br>-->\\r\\n  <!--<div class=\\\"row\\\">-->\\r\\n    <!--<div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">-->\\r\\n      <!--<div class=\\\"card\\\" *ngIf=\\\"role !== 'admin' && !checkCourse(course.id)\\\">-->\\r\\n        <!--<div class=\\\"card-body\\\">-->\\r\\n          <!--<h5 class=\\\"card-title\\\">{{course.title}}</h5>-->\\r\\n          <!--<p class=\\\"card-text\\\">Visit the modules and lesson of {{course.title}}</p>-->\\r\\n          <!--<a routerLink=\\\"/course/{{course.id}}\\\"-->\\r\\n             <!--class=\\\"btn btn-primary\\\">View Course</a>-->\\r\\n        <!--</div>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n  <!--<div class=\\\"row\\\">-->\\r\\n    <!--<div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">-->\\r\\n      <!--<div class=\\\"card\\\" *ngIf=\\\"role === 'admin'\\\">-->\\r\\n        <!--<div class=\\\"card-body\\\">-->\\r\\n          <!--<h5 class=\\\"card-title\\\">{{course.title}}</h5>-->\\r\\n          <!--<p class=\\\"card-text\\\">Visit the modules and lesson of {{course.title}}</p>-->\\r\\n          <!--<a routerLink=\\\"/course/{{course.id}}\\\"-->\\r\\n             <!--class=\\\"btn btn-primary\\\">View Course</a>-->\\r\\n          <!--<div *ngIf=\\\"role !== 'admin' && checkCourse(course.id)\\\">-->\\r\\n            <!--<a routerLink=\\\"/course/{{course.id}}/section\\\"-->\\r\\n               <!--class=\\\"btn btn-primary\\\">Enroll</a>-->\\r\\n          <!--</div>-->\\r\\n          <!--<div>-->\\r\\n            <!--<a routerLink=\\\"/course/{{course.id}}/section\\\"-->\\r\\n               <!--class=\\\"btn btn-primary\\\">+/- Section</a>-->\\r\\n          <!--</div>-->\\r\\n        <!--</div>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n<!--</div>-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\nimport {Course} from \"../models/coruse.model.client\";\r\nimport {Router} from \"@angular/router\";\r\nimport {SectionServiceClient} from \"../services/section.service.client\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-course-grid',\r\n  templateUrl: './course-grid.component.html',\r\n  styleUrls: ['./course-grid.component.css']\r\n})\r\nexport class CourseGridComponent implements OnInit {\r\n\r\n  constructor(private service: CourseServiceClient,\r\n              private userService: UserServiceClient,\r\n              private sectionService: SectionServiceClient,\r\n              private router: Router) {\r\n  }\r\n  courses: Course[] = [];\r\n  userId;\r\n  sections;\r\n  username;\r\n  firstName;\r\n  lastName;\r\n  phone;\r\n  address;\r\n  email;\r\n  role;\r\n  ngOnInit() {\r\n    this.service.findAllCourses()\r\n      .then(courses => this.courses = courses);\r\n      this.userService\r\n        .profile()\r\n        .then(response => response.status === 503 ?\r\n          this.role = null\r\n          : this.func(response)\r\n            .then((user) => {\r\n              this.role = user.role ;\r\n              this.username = user.username ;\r\n              this.firstName = user.firstName ;\r\n              this.lastName = user.lastName ;\r\n              this.phone = user.phone ;\r\n              this.address = user.address ;\r\n              this.email = user.email ;\r\n              this.userId = user._id ; })\r\n        );\r\n    this\r\n      .sectionService\r\n      .findSectionsForStudent()\r\n      .then(sections => this.sections = sections);\r\n  }\r\n  func(response) {\r\n    return response.json();\r\n  }\r\n  checkCourse(id) {\r\n    let flag = true;\r\n    for (const sec of this.sections){\r\n      if (sec.section == null) {\r\n        return flag;\r\n      }\r\n      if (sec.section.courseId === id) {\r\n        flag = false;\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n  logout() {\r\n    this.userService\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n<h1>Course Navigator ({{courses.length}})</h1>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\r\\n        <li *ngFor=\\\"let course of courses\\\"\\r\\n            (click)=\\\"selectCourse(course.id)\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n          {{course.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">Modules</li>\\r\\n        <li *ngFor=\\\"let module of modules\\\" class=\\\"list-group-item\\\">\\r\\n          {{module.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">lessons</div>\\r\\n    <div class=\\\"col-3\\\">widgets</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {CourseNavigatorServiceClient} from \"../services/course-navigator.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-course-navigator',\r\n  templateUrl: './course-navigator.component.html',\r\n  styleUrls: ['./course-navigator.component.css']\r\n})\r\nexport class CourseNavigatorComponent implements OnInit {\r\n\r\n  constructor(private service: CourseNavigatorServiceClient) { }\r\n\r\n  courses = [];\r\n  modules = [];\r\n\r\n  selectCourse(courseId) {\r\n    this.service.findAllModulesForCourses(courseId)\r\n      .then(modules => this.modules = modules);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.findAllCourses()\r\n      .then(courses => this.courses = courses);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"padding-left: 10%; padding-right: 10%\\\">\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a (click)=\\\"logout()\\\" class=\\\"nav-link\\\">Logout</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n  <h2>{{course.title}}</h2>\\r\\n  <br>\\r\\n  <app-module-list></app-module-list>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\nimport {Course} from \"../models/coruse.model.client\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-course-viewer',\r\n  templateUrl: './course-viewer.component.html',\r\n  styleUrls: ['./course-viewer.component.css']\r\n})\r\nexport class CourseViewerComponent implements OnInit {\r\n\r\n  constructor(private service: CourseServiceClient,\r\n              private userService: UserServiceClient,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\r\n  }\r\n\r\n  course: Course = new Course();\r\n  loadCourse(courseId) {\r\n    this.service.findCourseById(courseId)\r\n      .then(course => this.course = course);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logout() {\r\n    this.userService\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>{{message}}</h1>\\r\\n\\r\\n<h2>Courses ({{courses.length}})</h2>\\r\\n\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let course of courses\\\" class=\\\"list-item\\\" style=\\\"\\\">\\r\\n    {{course.title}}\\r\\n    <button (click)=\\\"deleteCourse(course.id)\\\">Delete</button>\\r\\n  </li>\\r\\n</ul>\\r\\n<input [(ngModel)]=\\\"courseTitle\\\"/>\\r\\n<button (click)=\\\"addCourse(courseTitle)\\\">\\r\\n  Add Course\\r\\n</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hello-world',\r\n  templateUrl: './hello-world.component.html',\r\n  styleUrls: ['./hello-world.component.css']\r\n})\r\nexport class HelloWorldComponent implements OnInit {\r\n\r\n  courseTitle;\r\n  message = 'Hello from Hello World Component!';\r\n  courses = [\r\n    {title: 'CS5200', id: 123},\r\n    {title: 'CS5610', id: 234},\r\n    {title: 'CS3200', id: 345},\r\n    {title: 'CS4550', id: 456}\r\n  ];\r\n  deleteCourse(courseId) {\r\n    this.courses = this.courses.filter(course =>\r\n      course.id !== courseId\r\n    );\r\n  }\r\n\r\n  addCourse(title) {\r\n    this.courses.push({\r\n      title: title,\r\n      id: title\r\n    });\r\n    this.courseTitle = '';\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\r\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\r\\n      class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link\\\"\\r\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\r\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\r\\n      {{lesson.title}}\\r\\n    </a>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<app-topic-pills></app-topic-pills>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {LessonServiceClient} from \"../services/lesson.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-lesson-tabs',\r\n  templateUrl: './lesson-tabs.component.html',\r\n  styleUrls: ['./lesson-tabs.component.css']\r\n})\r\nexport class LessonTabsComponent implements OnInit {\r\n\r\n  constructor(private service: LessonServiceClient,\r\n              private route: ActivatedRoute) {\r\n    this.route.params.subscribe(\r\n      params => this.setParams(params));\r\n  }\r\n\r\n  courseId;\r\n  moduleId;\r\n  lessonId;\r\n  lessons = [];\r\n\r\n  setParams(params) {\r\n    this.courseId = params['courseId'];\r\n    this.moduleId = params['moduleId'];\r\n    this.lessonId = params['lessonId'];\r\n    this.loadLessons(this.courseId , this.moduleId);\r\n  }\r\n\r\n  loadLessons(courseId, moduleId) {\r\n    this.courseId = courseId;\r\n    this.moduleId = moduleId;\r\n    console.log(moduleId);\r\n    this.service.findLessonsForModule(courseId, moduleId)\r\n      .then(lessons => this.lessons = lessons);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style = \\\"padding-left: 10%; padding-right: 10%\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <br>\\r\\n  <h1>Login</h1>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"username\\\"\\r\\n         placeholder=\\\"username\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"password\\\"\\r\\n         placeholder=\\\"password\\\"\\r\\n         type=\\\"password\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <button (click)=\\\"login(username, password)\\\"\\r\\n          class=\\\"btn btn-primary btn-block\\\">\\r\\n    Login\\r\\n  </button>\\r\\n  <br>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Route, Router} from \"@angular/router\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username;\r\n  password;\r\n  login(username, password) {\r\n    (username == null || password == null) ? alert(\"Please enter valid credentials\") :\r\n    this.service\r\n      .login(username, password)\r\n      .then((response) => { response.errorLogin === 0 ? alert(\"No such user exists\") :\r\n        this.router.navigate(['profile']);\r\n      });\r\n  }\r\n\r\n  constructor(private router: Router,\r\n              private service: UserServiceClient) { }\r\n\r\n  ngOnInit() {\r\n    this.service\r\n      .profile()\r\n      .then(response => response.status === 503 ?\r\n        this.router.navigate(['login'])\r\n        : this.router.navigate(['home'])\r\n      );\r\n  }\r\n  func(response) {\r\n    return response.json();\r\n  }\r\n\r\n}\r\n","export class Course {\r\n  id: number;\r\n  title: string;\r\n}\r\n","module.exports = \".active.wbdv {\\r\\n  background-color: red;\\r\\n  border-color: red;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\r\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\r\\n          class=\\\"list-group-item wbdv\\\">\\r\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\r\\n          {{module.title}}</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"col-8\\\">\\r\\n    <app-lesson-tabs></app-lesson-tabs>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {ModuleServiceClient} from \"../services/module.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-module-list',\r\n  templateUrl: './module-list.component.html',\r\n  styleUrls: ['./module-list.component.css']\r\n})\r\nexport class ModuleListComponent implements OnInit {\r\n\r\n  constructor(private service: ModuleServiceClient,\r\n              private route: ActivatedRoute) {\r\n    this.route.params.subscribe(\r\n      params => this.setParams(params));\r\n  }\r\n\r\n  courseId;\r\n  moduleId;\r\n  modules = [];\r\n\r\n  setParams(params) {\r\n    this.courseId = params['courseId'];\r\n    this.moduleId = params['moduleId'];\r\n    this.loadModules(this.courseId);\r\n  }\r\n\r\n  loadModules(courseId) {\r\n    this.courseId = courseId;\r\n    this.service.findModulesForCourse(courseId)\r\n      .then(modules => this.modules = modules);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style = \\\"padding-left: 10%; padding-right: 10%\\\">\\r\\n\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a *ngIf=\\\"role === 'admin'\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">Admin Home</a>\\r\\n    <a *ngIf=\\\"role !== 'admin'\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a (click)=\\\"logout()\\\" class=\\\"nav-link\\\">Logout</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n  <h1>Profile</h1>\\r\\n\\r\\n    <label>Username: <b>{{username}}</b></label>\\r\\n  <input [(ngModel)]=\\\"firstName\\\"\\r\\n         placeholder=\\\"First Name\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"lastName\\\"\\r\\n         placeholder=\\\"Last Name\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"email\\\"\\r\\n         placeholder=\\\"E-mail\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"phone\\\"\\r\\n         placeholder=\\\"Phone Number\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"address\\\"\\r\\n         placeholder=\\\"Address\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <button (click)=\\\"update(username, firstName, lastName, phone, email, address)\\\"\\r\\n          class=\\\"btn btn-primary btn-block\\\">\\r\\n    Update\\r\\n  </button>\\r\\n  <br>\\r\\n  <div *ngIf=\\\"role !== 'admin'\\\">\\r\\n    <h2>Sections ({{sections.length}})</h2>\\r\\n  </div>\\r\\n  <br>\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-5\\\">\\r\\n          <b>{{enrollment.section.courseName}}: </b>\\r\\n          {{enrollment.section.name}}\\r\\n          <b>({{enrollment.section.seats}})</b>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button *ngIf=\\\"sections.length !== 0\\\"\\r\\n                  (click)=\\\"unEnroll(enrollment.section)\\\"\\r\\n                  class=\\\"btn btn-danger\\\">Un-enroll</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <br>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {User} from \"../models/user.model.client\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\nimport {Router} from \"@angular/router\";\r\nimport {SectionServiceClient} from \"../services/section.service.client\";\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor(private service: UserServiceClient,\r\n              private sectionService: SectionServiceClient,\r\n              private courseService: CourseServiceClient,\r\n              private router: Router) { }\r\n\r\n  user = {};\r\n  username;\r\n  userId;\r\n  courseId;\r\n  firstName;\r\n  lastName;\r\n  phone;\r\n  email;\r\n  courseName;\r\n  course;\r\n  address;\r\n  password;\r\n  sections = [];\r\n  role;\r\n  update(username, firstName, lastName, phone, email, address) {\r\n    this.service\r\n      .updateUser(username, firstName, lastName, phone, email, address)\r\n      .then((user) => {\r\n        this.username = user.username ;\r\n        this.firstName = user.firstName;\r\n        this.lastName = user.lastName;\r\n        this.phone = user.phone;\r\n        this.address = user.address;\r\n        this.email = user.email;\r\n      })\r\n  }\r\n  logout() {\r\n    this.service\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.service\r\n      .profile()\r\n      .then(response => response.status === 503 ?\r\n        this.router.navigate(['login'])\r\n        : this.func(response)\r\n          .then((user) => {\r\n            this.role = user.role ;\r\n            this.username = user.username ;\r\n            this.firstName = user.firstName ;\r\n            this.lastName = user.lastName ;\r\n            this.phone = user.phone ;\r\n            this.address = user.address ;\r\n            this.email = user.email ;\r\n            this.userId = user._id ; })\r\n      )\r\n    this.sectionService\r\n      .findSectionsForStudent()\r\n      .then(sections => this.sections = sections );\r\n  }\r\n  func(response) {\r\n    return response.json();\r\n  }\r\n  unEnroll(section){\r\n    this.sectionService\r\n        .unEnrollFromSection(section._id)\r\n        .then(() => this.sectionService.findSectionsForStudent()\r\n          .then(sections => this.sections = sections ));\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style = \\\"padding-left: 10%; padding-right: 10%\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <br>\\r\\n  <h1>Register</h1>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"username\\\"\\r\\n         placeholder=\\\"Username\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"password\\\"\\r\\n         placeholder=\\\"Password\\\"\\r\\n         type=\\\"password\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <input [(ngModel)]=\\\"password2\\\"\\r\\n         placeholder=\\\"Verify Password\\\"\\r\\n         type=\\\"password\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <br>\\r\\n  <button (click)=\\\"register(username, password, password2)\\\"\\r\\n          class=\\\"btn btn-primary btn-block\\\">\\r\\n    Register\\r\\n  </button>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n              private service: UserServiceClient) { }\r\n\r\n  username;\r\n  password;\r\n  password2;\r\n\r\n  register(username, password, password2) {\r\n    (username == null || password == null) ? alert(\"Username or Password cannot be empty\") :\r\n      ((password === password2) ?\r\n          this.service.createUser(username, password)\r\n            .then((response) => { response.errorResponse === 0 ?\r\n              alert(\"Username is taken. Please provide other username.\") : this.router.navigate(['profile']); } )\r\n      : alert(\"Passwords do not match\"));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service\r\n      .profile()\r\n      .then(response => response.status === 503 ?\r\n        this.router.navigate(['register'])\r\n        : this.router.navigate(['home'])\r\n      );\r\n  }\r\n  func(response) {\r\n    return response.json();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style = \\\"padding-left: 10%; padding-right: 10%\\\">\\r\\n  <br>\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a *ngIf=\\\"role === 'admin'\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">Admin Home</a>\\r\\n    <a *ngIf=\\\"role !== 'admin'\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a (click)=\\\"logout()\\\" class=\\\"nav-link\\\">Logout</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <br>\\r\\n  <h1>Sections for course: {{courseId}}</h1>\\r\\n  <br>\\r\\n  <div *ngIf=\\\"role === 'admin'\\\">\\r\\n    <input [(ngModel)]=\\\"sectionName\\\"\\r\\n           placeholder=\\\"Section Name\\\"\\r\\n           class=\\\"form-control\\\">\\r\\n    <br>\\r\\n    <input [(ngModel)]=\\\"seats\\\"\\r\\n           placeholder=\\\"Enter Seats available\\\"\\r\\n           class=\\\"form-control\\\">\\r\\n    <br>\\r\\n    <button (click)=\\\"operationSection(sectionName, seats)\\\" class=\\\"btn btn-primary btn-block\\\">\\r\\n      {{this.buttonType}}\\r\\n    </button>\\r\\n  </div>\\r\\n  <br>\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <b>{{section.name}}: </b> {{section.seats}}\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <div *ngIf=\\\"role !== 'admin'\\\">\\r\\n            <button *ngIf=\\\"section.seats === 0\\\"\\r\\n                    class=\\\"float-right btn-dark\\\">Section Full</button>\\r\\n            <button *ngIf=\\\"section.seats !== 0\\\"\\r\\n                    (click)=\\\"enroll(section)\\\"\\r\\n                    class=\\\"float-right btn btn-primary\\\">Enroll</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <div *ngIf=\\\"role === 'admin'\\\">\\r\\n            <button (click)=\\\"populate(section)\\\"\\r\\n                    class=\\\"float-right btn btn-primary\\\">Edit</button>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"role === 'admin'\\\">\\r\\n            <button (click)=\\\"deleteSection(section)\\\"\\r\\n                    class=\\\"float-right btn btn-danger\\\">Delete</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {SectionServiceClient} from \"../services/section.service.client\";\r\nimport {CourseServiceClient} from \"../services/course.service.client\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-section-list',\r\n  templateUrl: './section-list.component.html',\r\n  styleUrls: ['./section-list.component.css']\r\n})\r\nexport class SectionListComponent implements OnInit {\r\n\r\n  constructor(private userService: UserServiceClient,\r\n              private service: SectionServiceClient,\r\n              private courseService: CourseServiceClient,\r\n              private router: Router,\r\n              private route: ActivatedRoute) {\r\n    this.route.params.subscribe(\r\n      params => this.setParams(params));\r\n  }\r\n  username;\r\n  userId;\r\n  firstName;\r\n  lastName;\r\n  phone;\r\n  email;\r\n  address;\r\n  sectionName = '';\r\n  seats = '';\r\n  buttonType = 'Add'\r\n  courseId = '';\r\n  sectionId = '';\r\n  course;\r\n  role;\r\n  courseName;\r\n  sections = [];\r\n  setParams(params) {\r\n    this.userId = params['userId'];\r\n    this.courseId = params['courseId'];\r\n    this.loadSections(params['courseId']);\r\n  }\r\n  loadSections(courseId) {\r\n    this.courseId = courseId;\r\n    this\r\n      .service\r\n      .findSectionsForCourse(courseId)\r\n      .then(sections => this.sections = sections);\r\n    this\r\n      .courseService\r\n      .findCourseById(this.courseId)\r\n      .then(course => {this.courseName = course.title; this.sectionName = course.title + ' Section ' + this.sections.length;} );\r\n  }\r\n  createSection(sectionName, seats) {\r\n    this\r\n      .service\r\n      .createSection(this.courseId, sectionName, seats, this.courseName)\r\n      .then(() => {\r\n        this.loadSections(this.courseId);\r\n      });\r\n  }\r\n\r\n  deleteSection(section) {\r\n    this\r\n      .service\r\n      .deleteSection(section, section._id)\r\n      .then(() => {\r\n        this.loadSections(this.courseId);\r\n      });\r\n  }\r\n  populate(section){\r\n    this.sectionName = section.name;\r\n    this.seats = section.seats;\r\n    this.buttonType = 'Update';\r\n    this.sectionId = section._id;\r\n  }\r\n  updateSection(name, seats) {\r\n    this.service\r\n      .updateSection(name, seats, this.courseId, this.sectionId)\r\n      .then((section) => {\r\n        this.loadSections(this.courseId);\r\n      })\r\n    this.buttonType = 'Add';\r\n    this.sectionName = '' ;\r\n    this.seats = '';\r\n  }\r\n  operationSection(sectionName, seats){\r\n    if(this.buttonType === 'Add') {\r\n      this.createSection(sectionName, seats);\r\n    } else{\r\n      this.updateSection(sectionName, seats);\r\n    }\r\n  }\r\n  enroll(section) {\r\n    this.service\r\n      .enrollStudentInSection(section._id)\r\n      .then(() => {\r\n        this.router.navigate(['profile']);\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService\r\n      .profile()\r\n      .then(response => response.status === 503 ?\r\n        this.router.navigate(['login'])\r\n        : this.func(response)\r\n          .then((user) => {\r\n            this.role = user.role;\r\n            this.username = user.username ;\r\n            this.firstName = user.firstName ;\r\n            this.lastName = user.lastName ;\r\n            this.phone = user.phone ;\r\n            this.address = user.address ;\r\n            this.email = user.email ;\r\n            this.userId = user._id ; })\r\n      );\r\n  }\r\n  func(response) {\r\n    return response.json();\r\n  }\r\n  logout() {\r\n    this.userService\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n\r\n}\r\n","export class CourseNavigatorServiceClient {\r\n  findAllCourses() {\r\n    return fetch('http://fathomless-brook-39975.herokuapp.com/api/course')\r\n      .then(response => response.json());\r\n  }\r\n  findAllModulesForCourses(courseId) {\r\n    return fetch('http://fathomless-brook-39975.herokuapp.com/api/course/' + courseId + '/module')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class CourseServiceClient {\r\n  // COURSE_URL = 'http://localhost:8085/api/course';\r\n  COURSE_URL = 'http://fathomless-brook-39975.herokuapp.com/api/course';\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_URL)\r\n      .then(response => response.json());\r\n  }\r\n  findCourseById(courseId) {\r\n    return fetch(this.COURSE_URL + '/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class LessonServiceClient {\r\n  findLessonsForModule(courseId, moduleId) {\r\n    return fetch('http://fathomless-brook-39975.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class ModuleServiceClient {\r\n  MODULE_URL = 'http://fathomless-brook-39975.herokuapp.com/api/course/COURSE_ID/module';\r\n  findModulesForCourse(courseId) {\r\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class SectionServiceClient {\r\n\r\n  SECTION_URL = 'http://shielded-waters-68947.herokuapp.com/api/course/COURSEID/section';\r\n\r\n  findSectionsForStudent() {\r\n    const url = 'http://shielded-waters-68947.herokuapp.com/api/student/section';\r\n    return fetch(url, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  enrollStudentInSection(sectionId) {\r\n    const url = 'http://shielded-waters-68947.herokuapp.com/api/section/' + sectionId + '/enrollment';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  unEnrollFromSection(sectionId) {\r\n    const url = 'http://shielded-waters-68947.herokuapp.com/api/section/' + sectionId + '/enrollment';\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  deleteSection(section1, sectionId) {\r\n    const url = 'http://shielded-waters-68947.herokuapp.com/api/section/' + sectionId;\r\n    const section = {\r\n      name: section1.name,\r\n      seats: section1.seats,\r\n      _id:  sectionId\r\n    };\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n      body: JSON.stringify(section),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  updateSection(sectionName, seats, courseId, sectionId) {\r\n    console.log(sectionName)\r\n    console.log(seats)\r\n    console.log(courseId)\r\n    console.log(sectionId)\r\n    const section = {\r\n      name: sectionName,\r\n      seats: seats,\r\n      _id: sectionId,\r\n      courseId: courseId\r\n    };\r\n    return fetch('http://shielded-waters-68947.herokuapp.com/api/section',\r\n      {\r\n        method: 'put',\r\n        body: JSON.stringify(section),\r\n        credentials: 'include', // include, same-origin, *omit\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findSectionsForCourse(courseId) {\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createSection(courseId, name, seats, courseName) {\r\n    const section = {courseId, name, seats, courseName};\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\r\n      method: 'post',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class TopicServiceClient {\r\n  findTopicsForLesson(courseId, moduleId, lessonId) {\r\n    return fetch('http://fathomless-brook-39975.herokuapp.com/api/course/' +\r\n      courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  findUserById(userId) {\r\n    return fetch('http://shielded-waters-68947.herokuapp.com/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('http://shielded-waters-68947.herokuapp.com/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  logout() {\r\n    return fetch('http://shielded-waters-68947.herokuapp.com/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch('http://shielded-waters-68947.herokuapp.com/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response);\r\n  }\r\n\r\n  updateUser(username, firstName, lastName, phone, email, address) {\r\n    const user = {\r\n      username: username,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      phone: phone,\r\n      email: email,\r\n      address: address\r\n    };\r\n    console.log(user.phone)\r\n    return fetch('http://shielded-waters-68947.herokuapp.com/api/profile',\r\n      {\r\n        method: 'put',\r\n        body: JSON.stringify(user),\r\n        credentials: 'include', // include, same-origin, *omit\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n      role: username.toLowerCase() === \"admin\" ? \"admin\" : \"student\"\r\n    };\r\n    return fetch('http://shielded-waters-68947.herokuapp.com/api/user', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n}\r\n","export class WidgetServiceClient {\r\n  findWidgetsForTopic(topicId) {\r\n    console.log(topicId)\r\n    return fetch('http://fathomless-brook-39975.herokuapp.com/api/widget/' + topicId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\r\\n  <li *ngFor=\\\"let topic of topics\\\"\\r\\n      class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link\\\"\\r\\n       [ngClass]=\\\"{'active': topic.id == topicId}\\\"\\r\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\r\\n      {{topic.title}}\\r\\n    </a>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<app-widget-list></app-widget-list>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {TopicServiceClient} from \"../services/topic.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-topic-pills',\r\n  templateUrl: './topic-pills.component.html',\r\n  styleUrls: ['./topic-pills.component.css']\r\n})\r\nexport class TopicPillsComponent implements OnInit {\r\n\r\n  constructor(private service: TopicServiceClient,\r\n              private route: ActivatedRoute) {\r\n    this.route.params.subscribe(\r\n      params => this.setParams(params));\r\n  }\r\n\r\n  courseId;\r\n  moduleId;\r\n  lessonId;\r\n  topicId;\r\n  topics = [];\r\n\r\n  setParams(params) {\r\n    this.courseId = params['courseId'];\r\n    this.moduleId = params['moduleId'];\r\n    this.lessonId = params['lessonId'];\r\n    this.topicId = params['topicId'];\r\n    this.loadTopics(this.courseId , this.moduleId, this.lessonId);\r\n  }\r\n\r\n  loadTopics(courseId, moduleId, lessonId) {\r\n    this.courseId = courseId\r\n    this.lessonId = lessonId\r\n    this.moduleId = moduleId\r\n    this.service.findTopicsForLesson(courseId, moduleId, lessonId)\r\n      .then(topics => this.topics = topics);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"padding-left: 10%; padding-right: 10%\\\">\\r\\n  <h1>\\r\\n    White Board\\r\\n  </h1>\\r\\n\\r\\n    <!--<div>-->\\r\\n      <!--<a routerLink=\\\"/login\\\">Login</a>-->\\r\\n      <!--<a routerLink=\\\"/register\\\">Register</a>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a *ngIf=\\\"role === 'admin'\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">Admin Home</a>\\r\\n    <a *ngIf=\\\"role !== 'admin'\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a (click)=\\\"logout()\\\" class=\\\"nav-link\\\">Logout</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n\\r\\n  <app-course-grid></app-course-grid>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-white-board',\r\n  templateUrl: './white-board.component.html',\r\n  styleUrls: ['./white-board.component.css']\r\n})\r\nexport class WhiteBoardComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private service: UserServiceClient,\r\n              private router: Router) {\r\n    this.route.params.subscribe(\r\n      params => this.setParams(params));\r\n  }\r\n  role;\r\n  username;\r\n  firstName;\r\n  lastName;\r\n  phone;\r\n  address;\r\n  email;\r\n  userId;\r\n  setParams(params) {\r\n    this.userId = params['userId'];\r\n  }\r\n  ngOnInit() {\r\n    this.service\r\n      .profile()\r\n      .then(response => response.status === 503 ?\r\n        this.role = null\r\n        : this.func(response)\r\n          .then((user) => {\r\n            this.role = user.role ;\r\n            this.username = user.username ;\r\n            this.firstName = user.firstName ;\r\n            this.lastName = user.lastName ;\r\n            this.phone = user.phone ;\r\n            this.address = user.address ;\r\n            this.email = user.email ;\r\n            this.userId = user._id ; })\r\n      );\r\n  }\r\n  func(response) {\r\n    return response.json();\r\n  }\r\n  logout() {\r\n    this.service\r\n      .logout()\r\n      .then(() =>\r\n        this.router.navigate(['login']));\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\r\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\r\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\r\\n      <div [ngSwitch]=\\\"widget.size\\\">\\r\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.headingText}}</h1>\\r\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.headingText}}</h2>\\r\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.headingText}}</h3>\\r\\n        <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.headingText}}</h4>\\r\\n        <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.headingText}}</h5>\\r\\n        <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.headingText}}</h6>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'Paragraph'\\\">\\r\\n      <p>{{widget.text}}</p>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'List'\\\">\\r\\n      <div [ngSwitch]=\\\"widget.listType\\\">\\r\\n        <div *ngSwitchCase=1>\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\"\\r\\n                *ngFor=\\\"let item of widget.listItemsText.split('\\\\n')\\\">\\r\\n              {{item}}\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div [ngSwitch]=\\\"widget.listType\\\">\\r\\n        <div *ngSwitchCase=1>\\r\\n          <ol class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\"\\r\\n                *ngFor=\\\"let item of widget.listItemsText.split('\\\\n')\\\">\\r\\n              {{item}}\\r\\n            </li>\\r\\n          </ol>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'Link'\\\">\\r\\n      <a  style=\\\"color: Blue \\\"\\r\\n           href = {{widget.linkUrl}}>{{widget.linkName}}</a>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'Image'\\\">\\r\\n      <div style = \\\"width: 200px ; height: 200px \\\">\\r\\n        <img\\r\\n          style = \\\"max-width: 100%; max-height: 100%\\\"\\r\\n          src = {{widget.src}}/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'Exam'\\\">\\r\\n      <h1>Exam Widget</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {WidgetServiceClient} from \"../services/widget.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-widget-list',\r\n  templateUrl: './widget-list.component.html',\r\n  styleUrls: ['./widget-list.component.css']\r\n})\r\nexport class WidgetListComponent implements OnInit {\r\n  constructor(private service: WidgetServiceClient,\r\n              private route: ActivatedRoute) {\r\n    this.route.params.subscribe(params => this.setContext(params));\r\n  }\r\n  topicId;\r\n  context;\r\n  widgets = [];\r\n  setContext(params) {\r\n    this.context = params;\r\n    this.loadWidgets(params.topicId);\r\n  }\r\n  loadWidgets(topicId) {\r\n    this.topicId = topicId;\r\n    this.service.findWidgetsForTopic(topicId)\r\n      .then(widgets => this.widgets = widgets);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}